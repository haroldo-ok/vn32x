Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WS

Grammar

Rule 0     S' -> file_input_end
Rule 1     file_input_end -> declarations labels file_input ENDMARKER
Rule 2     file_input -> file_input NEWLINE
Rule 3     file_input -> file_input stmt
Rule 4     file_input -> NEWLINE
Rule 5     file_input -> stmt
Rule 6     declarations -> declarations NEWLINE
Rule 7     declarations -> declarations declaration
Rule 8     declarations -> NEWLINE
Rule 9     declarations -> declaration
Rule 10    declaration -> image_decl
Rule 11    declaration -> character_decl
Rule 12    image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE
Rule 13    character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE
Rule 14    named_params -> COMMA NAME ASSIGN STRING
Rule 15    named_params -> <empty>
Rule 16    labels -> labels NEWLINE
Rule 17    labels -> labels label
Rule 18    labels -> NEWLINE
Rule 19    labels -> label
Rule 20    label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT
Rule 21    funcdef -> DEF NAME parameters COLON suite
Rule 22    parameters -> LPAR RPAR
Rule 23    parameters -> LPAR varargslist RPAR
Rule 24    varargslist -> varargslist COMMA NAME
Rule 25    varargslist -> NAME
Rule 26    stmt -> simple_stmt
Rule 27    stmt -> compound_stmt
Rule 28    simple_stmt -> small_stmts NEWLINE
Rule 29    simple_stmt -> small_stmts SEMICOLON NEWLINE
Rule 30    small_stmts -> small_stmts SEMICOLON small_stmt
Rule 31    small_stmts -> small_stmt
Rule 32    small_stmt -> flow_stmt
Rule 33    small_stmt -> expr_stmt
Rule 34    expr_stmt -> testlist ASSIGN testlist
Rule 35    expr_stmt -> testlist
Rule 36    flow_stmt -> return_stmt
Rule 37    return_stmt -> RETURN testlist
Rule 38    compound_stmt -> if_stmt
Rule 39    compound_stmt -> funcdef
Rule 40    if_stmt -> IF test COLON suite
Rule 41    suite -> simple_stmt
Rule 42    suite -> NEWLINE INDENT stmts DEDENT
Rule 43    stmts -> stmts stmt
Rule 44    stmts -> stmt
Rule 45    comparison -> comparison PLUS comparison
Rule 46    comparison -> comparison MINUS comparison
Rule 47    comparison -> comparison MULT comparison
Rule 48    comparison -> comparison DIV comparison
Rule 49    comparison -> comparison LT comparison
Rule 50    comparison -> comparison EQ comparison
Rule 51    comparison -> comparison GT comparison
Rule 52    comparison -> PLUS comparison
Rule 53    comparison -> MINUS comparison
Rule 54    comparison -> power
Rule 55    power -> atom
Rule 56    power -> atom trailer
Rule 57    atom -> NAME
Rule 58    atom -> NUMBER
Rule 59    atom -> STRING
Rule 60    atom -> LPAR testlist RPAR
Rule 61    trailer -> LPAR arglist RPAR
Rule 62    testlist -> testlist_multi COMMA
Rule 63    testlist -> testlist_multi
Rule 64    testlist_multi -> testlist_multi COMMA test
Rule 65    testlist_multi -> test
Rule 66    test -> comparison
Rule 67    arglist -> arglist COMMA argument
Rule 68    arglist -> argument
Rule 69    argument -> test

Terminals, with rules where they appear

ASSIGN               : 12 13 14 34
CHARACTER            : 13
COLON                : 20 21 40
COMMA                : 14 24 62 64 67
DEDENT               : 20 42
DEF                  : 21
DEFINE               : 13
DIV                  : 48
ENDMARKER            : 1
EQ                   : 50
GT                   : 51
IF                   : 40
IMAGE                : 12
INDENT               : 20 42
LABEL                : 20
LPAR                 : 13 22 23 60 61
LT                   : 49
MINUS                : 46 53
MULT                 : 47
NAME                 : 12 12 13 14 20 20 20 21 24 25 57
NEWLINE              : 2 4 6 8 12 13 16 18 20 20 28 29 42
NUMBER               : 58
PLUS                 : 45 52
RETURN               : 37
RPAR                 : 13 22 23 60 61
SCENE                : 20
SEMICOLON            : 29 30
STRING               : 12 13 14 59
WS                   : 
error                : 

Nonterminals, with rules where they appear

arglist              : 61 67
argument             : 67 68
atom                 : 55 56
character_decl       : 11
comparison           : 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 66
compound_stmt        : 27
declaration          : 7 9
declarations         : 1 6 7
expr_stmt            : 33
file_input           : 1 2 3
file_input_end       : 0
flow_stmt            : 32
funcdef              : 39
if_stmt              : 38
image_decl           : 10
label                : 17 19
labels               : 1 16 17
named_params         : 13
parameters           : 21
power                : 54
return_stmt          : 36
simple_stmt          : 26 41
small_stmt           : 30 31
small_stmts          : 28 29 30
stmt                 : 3 5 43 44
stmts                : 42 43
suite                : 21 40
test                 : 40 64 65 69
testlist             : 34 34 35 37 60
testlist_multi       : 62 63 64
trailer              : 56
varargslist          : 23 24

Parsing method: LALR

state 0

    (0) S' -> . file_input_end
    (1) file_input_end -> . declarations labels file_input ENDMARKER
    (6) declarations -> . declarations NEWLINE
    (7) declarations -> . declarations declaration
    (8) declarations -> . NEWLINE
    (9) declarations -> . declaration
    (10) declaration -> . image_decl
    (11) declaration -> . character_decl
    (12) image_decl -> . IMAGE NAME NAME ASSIGN STRING NEWLINE
    (13) character_decl -> . DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE

    NEWLINE         shift and go to state 1
    IMAGE           shift and go to state 3
    DEFINE          shift and go to state 6

    declarations                   shift and go to state 4
    image_decl                     shift and go to state 2
    declaration                    shift and go to state 5
    character_decl                 shift and go to state 7
    file_input_end                 shift and go to state 8

state 1

    (8) declarations -> NEWLINE .

    NEWLINE         reduce using rule 8 (declarations -> NEWLINE .)
    LABEL           reduce using rule 8 (declarations -> NEWLINE .)
    IMAGE           reduce using rule 8 (declarations -> NEWLINE .)
    DEFINE          reduce using rule 8 (declarations -> NEWLINE .)


state 2

    (10) declaration -> image_decl .

    NEWLINE         reduce using rule 10 (declaration -> image_decl .)
    LABEL           reduce using rule 10 (declaration -> image_decl .)
    IMAGE           reduce using rule 10 (declaration -> image_decl .)
    DEFINE          reduce using rule 10 (declaration -> image_decl .)


state 3

    (12) image_decl -> IMAGE . NAME NAME ASSIGN STRING NEWLINE

    NAME            shift and go to state 9


state 4

    (1) file_input_end -> declarations . labels file_input ENDMARKER
    (6) declarations -> declarations . NEWLINE
    (7) declarations -> declarations . declaration
    (16) labels -> . labels NEWLINE
    (17) labels -> . labels label
    (18) labels -> . NEWLINE
    (19) labels -> . label
    (10) declaration -> . image_decl
    (11) declaration -> . character_decl
    (20) label -> . LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT
    (12) image_decl -> . IMAGE NAME NAME ASSIGN STRING NEWLINE
    (13) character_decl -> . DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE

    NEWLINE         shift and go to state 12
    LABEL           shift and go to state 11
    IMAGE           shift and go to state 3
    DEFINE          shift and go to state 6

    image_decl                     shift and go to state 2
    labels                         shift and go to state 10
    label                          shift and go to state 13
    declaration                    shift and go to state 14
    character_decl                 shift and go to state 7

state 5

    (9) declarations -> declaration .

    NEWLINE         reduce using rule 9 (declarations -> declaration .)
    LABEL           reduce using rule 9 (declarations -> declaration .)
    IMAGE           reduce using rule 9 (declarations -> declaration .)
    DEFINE          reduce using rule 9 (declarations -> declaration .)


state 6

    (13) character_decl -> DEFINE . NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE

    NAME            shift and go to state 15


state 7

    (11) declaration -> character_decl .

    NEWLINE         reduce using rule 11 (declaration -> character_decl .)
    LABEL           reduce using rule 11 (declaration -> character_decl .)
    IMAGE           reduce using rule 11 (declaration -> character_decl .)
    DEFINE          reduce using rule 11 (declaration -> character_decl .)


state 8

    (0) S' -> file_input_end .



state 9

    (12) image_decl -> IMAGE NAME . NAME ASSIGN STRING NEWLINE

    NAME            shift and go to state 16


state 10

    (1) file_input_end -> declarations labels . file_input ENDMARKER
    (16) labels -> labels . NEWLINE
    (17) labels -> labels . label
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (20) label -> . LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT
    (26) stmt -> . simple_stmt
    (27) stmt -> . compound_stmt
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (38) compound_stmt -> . if_stmt
    (39) compound_stmt -> . funcdef
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (40) if_stmt -> . IF test COLON suite
    (21) funcdef -> . DEF NAME parameters COLON suite
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 25
    LABEL           shift and go to state 11
    IF              shift and go to state 40
    DEF             shift and go to state 23
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    small_stmt                     shift and go to state 18
    return_stmt                    shift and go to state 20
    flow_stmt                      shift and go to state 24
    label                          shift and go to state 26
    test                           shift and go to state 27
    compound_stmt                  shift and go to state 28
    power                          shift and go to state 31
    simple_stmt                    shift and go to state 32
    testlist                       shift and go to state 33
    stmt                           shift and go to state 34
    testlist_multi                 shift and go to state 35
    atom                           shift and go to state 36
    funcdef                        shift and go to state 37
    expr_stmt                      shift and go to state 39
    comparison                     shift and go to state 41
    if_stmt                        shift and go to state 38
    file_input                     shift and go to state 43
    small_stmts                    shift and go to state 44

state 11

    (20) label -> LABEL . NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT

    NAME            shift and go to state 45


state 12

    (6) declarations -> declarations NEWLINE .
    (18) labels -> NEWLINE .

  ! reduce/reduce conflict for NEWLINE resolved using rule 6 (declarations -> declarations NEWLINE .)
  ! reduce/reduce conflict for LABEL resolved using rule 6 (declarations -> declarations NEWLINE .)
    NEWLINE         reduce using rule 6 (declarations -> declarations NEWLINE .)
    LABEL           reduce using rule 6 (declarations -> declarations NEWLINE .)
    IMAGE           reduce using rule 6 (declarations -> declarations NEWLINE .)
    DEFINE          reduce using rule 6 (declarations -> declarations NEWLINE .)
    IF              reduce using rule 18 (labels -> NEWLINE .)
    DEF             reduce using rule 18 (labels -> NEWLINE .)
    RETURN          reduce using rule 18 (labels -> NEWLINE .)
    PLUS            reduce using rule 18 (labels -> NEWLINE .)
    MINUS           reduce using rule 18 (labels -> NEWLINE .)
    NAME            reduce using rule 18 (labels -> NEWLINE .)
    NUMBER          reduce using rule 18 (labels -> NEWLINE .)
    STRING          reduce using rule 18 (labels -> NEWLINE .)
    LPAR            reduce using rule 18 (labels -> NEWLINE .)

  ! NEWLINE         [ reduce using rule 18 (labels -> NEWLINE .) ]
  ! LABEL           [ reduce using rule 18 (labels -> NEWLINE .) ]


state 13

    (19) labels -> label .

    NEWLINE         reduce using rule 19 (labels -> label .)
    LABEL           reduce using rule 19 (labels -> label .)
    IF              reduce using rule 19 (labels -> label .)
    DEF             reduce using rule 19 (labels -> label .)
    RETURN          reduce using rule 19 (labels -> label .)
    PLUS            reduce using rule 19 (labels -> label .)
    MINUS           reduce using rule 19 (labels -> label .)
    NAME            reduce using rule 19 (labels -> label .)
    NUMBER          reduce using rule 19 (labels -> label .)
    STRING          reduce using rule 19 (labels -> label .)
    LPAR            reduce using rule 19 (labels -> label .)


state 14

    (7) declarations -> declarations declaration .

    NEWLINE         reduce using rule 7 (declarations -> declarations declaration .)
    LABEL           reduce using rule 7 (declarations -> declarations declaration .)
    IMAGE           reduce using rule 7 (declarations -> declarations declaration .)
    DEFINE          reduce using rule 7 (declarations -> declarations declaration .)


state 15

    (13) character_decl -> DEFINE NAME . ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE

    ASSIGN          shift and go to state 46


state 16

    (12) image_decl -> IMAGE NAME NAME . ASSIGN STRING NEWLINE

    ASSIGN          shift and go to state 47


state 17

    (60) atom -> LPAR . testlist RPAR
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    testlist                       shift and go to state 48
    testlist_multi                 shift and go to state 35
    atom                           shift and go to state 36
    test                           shift and go to state 27

state 18

    (31) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 31 (small_stmts -> small_stmt .)
    SEMICOLON       reduce using rule 31 (small_stmts -> small_stmt .)


state 19

    (58) atom -> NUMBER .

    LPAR            reduce using rule 58 (atom -> NUMBER .)
    PLUS            reduce using rule 58 (atom -> NUMBER .)
    MINUS           reduce using rule 58 (atom -> NUMBER .)
    MULT            reduce using rule 58 (atom -> NUMBER .)
    DIV             reduce using rule 58 (atom -> NUMBER .)
    LT              reduce using rule 58 (atom -> NUMBER .)
    EQ              reduce using rule 58 (atom -> NUMBER .)
    GT              reduce using rule 58 (atom -> NUMBER .)
    COMMA           reduce using rule 58 (atom -> NUMBER .)
    ASSIGN          reduce using rule 58 (atom -> NUMBER .)
    NEWLINE         reduce using rule 58 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 58 (atom -> NUMBER .)
    RPAR            reduce using rule 58 (atom -> NUMBER .)
    COLON           reduce using rule 58 (atom -> NUMBER .)


state 20

    (36) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 36 (flow_stmt -> return_stmt .)
    SEMICOLON       reduce using rule 36 (flow_stmt -> return_stmt .)


state 21

    (37) return_stmt -> RETURN . testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    testlist                       shift and go to state 49
    testlist_multi                 shift and go to state 35
    atom                           shift and go to state 36
    test                           shift and go to state 27

state 22

    (53) comparison -> MINUS . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 50
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 23

    (21) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 51


state 24

    (32) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 32 (small_stmt -> flow_stmt .)
    SEMICOLON       reduce using rule 32 (small_stmt -> flow_stmt .)


state 25

    (16) labels -> labels NEWLINE .
    (4) file_input -> NEWLINE .

  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for IF resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for DEF resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for PLUS resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for MINUS resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for NAME resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for NUMBER resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (file_input -> NEWLINE .)
  ! reduce/reduce conflict for LPAR resolved using rule 4 (file_input -> NEWLINE .)
    LABEL           reduce using rule 16 (labels -> labels NEWLINE .)
    ENDMARKER       reduce using rule 4 (file_input -> NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input -> NEWLINE .)
    IF              reduce using rule 4 (file_input -> NEWLINE .)
    DEF             reduce using rule 4 (file_input -> NEWLINE .)
    RETURN          reduce using rule 4 (file_input -> NEWLINE .)
    PLUS            reduce using rule 4 (file_input -> NEWLINE .)
    MINUS           reduce using rule 4 (file_input -> NEWLINE .)
    NAME            reduce using rule 4 (file_input -> NEWLINE .)
    NUMBER          reduce using rule 4 (file_input -> NEWLINE .)
    STRING          reduce using rule 4 (file_input -> NEWLINE .)
    LPAR            reduce using rule 4 (file_input -> NEWLINE .)

  ! NEWLINE         [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! IF              [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! DEF             [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! RETURN          [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! PLUS            [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! MINUS           [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! NAME            [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! NUMBER          [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! STRING          [ reduce using rule 16 (labels -> labels NEWLINE .) ]
  ! LPAR            [ reduce using rule 16 (labels -> labels NEWLINE .) ]


state 26

    (17) labels -> labels label .

    NEWLINE         reduce using rule 17 (labels -> labels label .)
    LABEL           reduce using rule 17 (labels -> labels label .)
    IF              reduce using rule 17 (labels -> labels label .)
    DEF             reduce using rule 17 (labels -> labels label .)
    RETURN          reduce using rule 17 (labels -> labels label .)
    PLUS            reduce using rule 17 (labels -> labels label .)
    MINUS           reduce using rule 17 (labels -> labels label .)
    NAME            reduce using rule 17 (labels -> labels label .)
    NUMBER          reduce using rule 17 (labels -> labels label .)
    STRING          reduce using rule 17 (labels -> labels label .)
    LPAR            reduce using rule 17 (labels -> labels label .)


state 27

    (65) testlist_multi -> test .

    COMMA           reduce using rule 65 (testlist_multi -> test .)
    ASSIGN          reduce using rule 65 (testlist_multi -> test .)
    NEWLINE         reduce using rule 65 (testlist_multi -> test .)
    SEMICOLON       reduce using rule 65 (testlist_multi -> test .)
    RPAR            reduce using rule 65 (testlist_multi -> test .)


state 28

    (27) stmt -> compound_stmt .

    DEDENT          reduce using rule 27 (stmt -> compound_stmt .)
    IF              reduce using rule 27 (stmt -> compound_stmt .)
    DEF             reduce using rule 27 (stmt -> compound_stmt .)
    RETURN          reduce using rule 27 (stmt -> compound_stmt .)
    PLUS            reduce using rule 27 (stmt -> compound_stmt .)
    MINUS           reduce using rule 27 (stmt -> compound_stmt .)
    NAME            reduce using rule 27 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 27 (stmt -> compound_stmt .)
    STRING          reduce using rule 27 (stmt -> compound_stmt .)
    LPAR            reduce using rule 27 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 27 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 27 (stmt -> compound_stmt .)


state 29

    (52) comparison -> PLUS . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 52
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 30

    (59) atom -> STRING .

    LPAR            reduce using rule 59 (atom -> STRING .)
    PLUS            reduce using rule 59 (atom -> STRING .)
    MINUS           reduce using rule 59 (atom -> STRING .)
    MULT            reduce using rule 59 (atom -> STRING .)
    DIV             reduce using rule 59 (atom -> STRING .)
    LT              reduce using rule 59 (atom -> STRING .)
    EQ              reduce using rule 59 (atom -> STRING .)
    GT              reduce using rule 59 (atom -> STRING .)
    COMMA           reduce using rule 59 (atom -> STRING .)
    ASSIGN          reduce using rule 59 (atom -> STRING .)
    NEWLINE         reduce using rule 59 (atom -> STRING .)
    SEMICOLON       reduce using rule 59 (atom -> STRING .)
    RPAR            reduce using rule 59 (atom -> STRING .)
    COLON           reduce using rule 59 (atom -> STRING .)


state 31

    (54) comparison -> power .

    PLUS            reduce using rule 54 (comparison -> power .)
    MINUS           reduce using rule 54 (comparison -> power .)
    MULT            reduce using rule 54 (comparison -> power .)
    DIV             reduce using rule 54 (comparison -> power .)
    LT              reduce using rule 54 (comparison -> power .)
    EQ              reduce using rule 54 (comparison -> power .)
    GT              reduce using rule 54 (comparison -> power .)
    COMMA           reduce using rule 54 (comparison -> power .)
    ASSIGN          reduce using rule 54 (comparison -> power .)
    NEWLINE         reduce using rule 54 (comparison -> power .)
    SEMICOLON       reduce using rule 54 (comparison -> power .)
    RPAR            reduce using rule 54 (comparison -> power .)
    COLON           reduce using rule 54 (comparison -> power .)


state 32

    (26) stmt -> simple_stmt .

    DEDENT          reduce using rule 26 (stmt -> simple_stmt .)
    IF              reduce using rule 26 (stmt -> simple_stmt .)
    DEF             reduce using rule 26 (stmt -> simple_stmt .)
    RETURN          reduce using rule 26 (stmt -> simple_stmt .)
    PLUS            reduce using rule 26 (stmt -> simple_stmt .)
    MINUS           reduce using rule 26 (stmt -> simple_stmt .)
    NAME            reduce using rule 26 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 26 (stmt -> simple_stmt .)
    STRING          reduce using rule 26 (stmt -> simple_stmt .)
    LPAR            reduce using rule 26 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 26 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 26 (stmt -> simple_stmt .)


state 33

    (34) expr_stmt -> testlist . ASSIGN testlist
    (35) expr_stmt -> testlist .

    ASSIGN          shift and go to state 53
    NEWLINE         reduce using rule 35 (expr_stmt -> testlist .)
    SEMICOLON       reduce using rule 35 (expr_stmt -> testlist .)


state 34

    (5) file_input -> stmt .

    ENDMARKER       reduce using rule 5 (file_input -> stmt .)
    NEWLINE         reduce using rule 5 (file_input -> stmt .)
    IF              reduce using rule 5 (file_input -> stmt .)
    DEF             reduce using rule 5 (file_input -> stmt .)
    RETURN          reduce using rule 5 (file_input -> stmt .)
    PLUS            reduce using rule 5 (file_input -> stmt .)
    MINUS           reduce using rule 5 (file_input -> stmt .)
    NAME            reduce using rule 5 (file_input -> stmt .)
    NUMBER          reduce using rule 5 (file_input -> stmt .)
    STRING          reduce using rule 5 (file_input -> stmt .)
    LPAR            reduce using rule 5 (file_input -> stmt .)


state 35

    (62) testlist -> testlist_multi . COMMA
    (63) testlist -> testlist_multi .
    (64) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 54
    ASSIGN          reduce using rule 63 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 63 (testlist -> testlist_multi .)
    SEMICOLON       reduce using rule 63 (testlist -> testlist_multi .)
    RPAR            reduce using rule 63 (testlist -> testlist_multi .)


state 36

    (55) power -> atom .
    (56) power -> atom . trailer
    (61) trailer -> . LPAR arglist RPAR

    PLUS            reduce using rule 55 (power -> atom .)
    MINUS           reduce using rule 55 (power -> atom .)
    MULT            reduce using rule 55 (power -> atom .)
    DIV             reduce using rule 55 (power -> atom .)
    LT              reduce using rule 55 (power -> atom .)
    EQ              reduce using rule 55 (power -> atom .)
    GT              reduce using rule 55 (power -> atom .)
    COMMA           reduce using rule 55 (power -> atom .)
    ASSIGN          reduce using rule 55 (power -> atom .)
    NEWLINE         reduce using rule 55 (power -> atom .)
    SEMICOLON       reduce using rule 55 (power -> atom .)
    COLON           reduce using rule 55 (power -> atom .)
    RPAR            reduce using rule 55 (power -> atom .)
    LPAR            shift and go to state 55

    trailer                        shift and go to state 56

state 37

    (39) compound_stmt -> funcdef .

    ENDMARKER       reduce using rule 39 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 39 (compound_stmt -> funcdef .)
    IF              reduce using rule 39 (compound_stmt -> funcdef .)
    DEF             reduce using rule 39 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 39 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 39 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 39 (compound_stmt -> funcdef .)
    NAME            reduce using rule 39 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 39 (compound_stmt -> funcdef .)
    STRING          reduce using rule 39 (compound_stmt -> funcdef .)
    LPAR            reduce using rule 39 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 39 (compound_stmt -> funcdef .)


state 38

    (38) compound_stmt -> if_stmt .

    ENDMARKER       reduce using rule 38 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 38 (compound_stmt -> if_stmt .)
    IF              reduce using rule 38 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 38 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 38 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 38 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 38 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 38 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 38 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 38 (compound_stmt -> if_stmt .)
    LPAR            reduce using rule 38 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 38 (compound_stmt -> if_stmt .)


state 39

    (33) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 33 (small_stmt -> expr_stmt .)
    SEMICOLON       reduce using rule 33 (small_stmt -> expr_stmt .)


state 40

    (40) if_stmt -> IF . test COLON suite
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    atom                           shift and go to state 36
    test                           shift and go to state 57

state 41

    (66) test -> comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    RPAR            reduce using rule 66 (test -> comparison .)
    COMMA           reduce using rule 66 (test -> comparison .)
    COLON           reduce using rule 66 (test -> comparison .)
    ASSIGN          reduce using rule 66 (test -> comparison .)
    NEWLINE         reduce using rule 66 (test -> comparison .)
    SEMICOLON       reduce using rule 66 (test -> comparison .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 63
    MULT            shift and go to state 64
    DIV             shift and go to state 61
    LT              shift and go to state 59
    EQ              shift and go to state 62
    GT              shift and go to state 58


state 42

    (57) atom -> NAME .

    LPAR            reduce using rule 57 (atom -> NAME .)
    PLUS            reduce using rule 57 (atom -> NAME .)
    MINUS           reduce using rule 57 (atom -> NAME .)
    MULT            reduce using rule 57 (atom -> NAME .)
    DIV             reduce using rule 57 (atom -> NAME .)
    LT              reduce using rule 57 (atom -> NAME .)
    EQ              reduce using rule 57 (atom -> NAME .)
    GT              reduce using rule 57 (atom -> NAME .)
    COMMA           reduce using rule 57 (atom -> NAME .)
    ASSIGN          reduce using rule 57 (atom -> NAME .)
    NEWLINE         reduce using rule 57 (atom -> NAME .)
    SEMICOLON       reduce using rule 57 (atom -> NAME .)
    RPAR            reduce using rule 57 (atom -> NAME .)
    COLON           reduce using rule 57 (atom -> NAME .)


state 43

    (1) file_input_end -> declarations labels file_input . ENDMARKER
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (26) stmt -> . simple_stmt
    (27) stmt -> . compound_stmt
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (38) compound_stmt -> . if_stmt
    (39) compound_stmt -> . funcdef
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (40) if_stmt -> . IF test COLON suite
    (21) funcdef -> . DEF NAME parameters COLON suite
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    ENDMARKER       shift and go to state 65
    NEWLINE         shift and go to state 66
    IF              shift and go to state 40
    DEF             shift and go to state 23
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    small_stmt                     shift and go to state 18
    return_stmt                    shift and go to state 20
    flow_stmt                      shift and go to state 24
    test                           shift and go to state 27
    compound_stmt                  shift and go to state 28
    power                          shift and go to state 31
    simple_stmt                    shift and go to state 32
    testlist                       shift and go to state 33
    stmt                           shift and go to state 67
    testlist_multi                 shift and go to state 35
    atom                           shift and go to state 36
    funcdef                        shift and go to state 37
    expr_stmt                      shift and go to state 39
    comparison                     shift and go to state 41
    if_stmt                        shift and go to state 38
    small_stmts                    shift and go to state 44

state 44

    (28) simple_stmt -> small_stmts . NEWLINE
    (29) simple_stmt -> small_stmts . SEMICOLON NEWLINE
    (30) small_stmts -> small_stmts . SEMICOLON small_stmt

    NEWLINE         shift and go to state 68
    SEMICOLON       shift and go to state 69


state 45

    (20) label -> LABEL NAME . COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT

    COLON           shift and go to state 70


state 46

    (13) character_decl -> DEFINE NAME ASSIGN . CHARACTER LPAR STRING named_params RPAR NEWLINE

    CHARACTER       shift and go to state 71


state 47

    (12) image_decl -> IMAGE NAME NAME ASSIGN . STRING NEWLINE

    STRING          shift and go to state 72


state 48

    (60) atom -> LPAR testlist . RPAR

    RPAR            shift and go to state 73


state 49

    (37) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 37 (return_stmt -> RETURN testlist .)
    SEMICOLON       reduce using rule 37 (return_stmt -> RETURN testlist .)


state 50

    (53) comparison -> MINUS comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 53 (comparison -> MINUS comparison .)
    MINUS           reduce using rule 53 (comparison -> MINUS comparison .)
    LT              reduce using rule 53 (comparison -> MINUS comparison .)
    EQ              reduce using rule 53 (comparison -> MINUS comparison .)
    GT              reduce using rule 53 (comparison -> MINUS comparison .)
    COMMA           reduce using rule 53 (comparison -> MINUS comparison .)
    ASSIGN          reduce using rule 53 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 53 (comparison -> MINUS comparison .)
    SEMICOLON       reduce using rule 53 (comparison -> MINUS comparison .)
    RPAR            reduce using rule 53 (comparison -> MINUS comparison .)
    COLON           reduce using rule 53 (comparison -> MINUS comparison .)
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! MULT            [ reduce using rule 53 (comparison -> MINUS comparison .) ]
  ! DIV             [ reduce using rule 53 (comparison -> MINUS comparison .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 51

    (21) funcdef -> DEF NAME . parameters COLON suite
    (22) parameters -> . LPAR RPAR
    (23) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 74

    parameters                     shift and go to state 75

state 52

    (52) comparison -> PLUS comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 52 (comparison -> PLUS comparison .)
    MINUS           reduce using rule 52 (comparison -> PLUS comparison .)
    LT              reduce using rule 52 (comparison -> PLUS comparison .)
    EQ              reduce using rule 52 (comparison -> PLUS comparison .)
    GT              reduce using rule 52 (comparison -> PLUS comparison .)
    COMMA           reduce using rule 52 (comparison -> PLUS comparison .)
    ASSIGN          reduce using rule 52 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 52 (comparison -> PLUS comparison .)
    SEMICOLON       reduce using rule 52 (comparison -> PLUS comparison .)
    RPAR            reduce using rule 52 (comparison -> PLUS comparison .)
    COLON           reduce using rule 52 (comparison -> PLUS comparison .)
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! MULT            [ reduce using rule 52 (comparison -> PLUS comparison .) ]
  ! DIV             [ reduce using rule 52 (comparison -> PLUS comparison .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 53

    (34) expr_stmt -> testlist ASSIGN . testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    testlist                       shift and go to state 76
    testlist_multi                 shift and go to state 35
    atom                           shift and go to state 36
    test                           shift and go to state 27

state 54

    (62) testlist -> testlist_multi COMMA .
    (64) testlist_multi -> testlist_multi COMMA . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    ASSIGN          reduce using rule 62 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 62 (testlist -> testlist_multi COMMA .)
    SEMICOLON       reduce using rule 62 (testlist -> testlist_multi COMMA .)
    RPAR            reduce using rule 62 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    atom                           shift and go to state 36
    test                           shift and go to state 77

state 55

    (61) trailer -> LPAR . arglist RPAR
    (67) arglist -> . arglist COMMA argument
    (68) arglist -> . argument
    (69) argument -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    argument                       shift and go to state 78
    atom                           shift and go to state 36
    test                           shift and go to state 79
    arglist                        shift and go to state 80

state 56

    (56) power -> atom trailer .

    PLUS            reduce using rule 56 (power -> atom trailer .)
    MINUS           reduce using rule 56 (power -> atom trailer .)
    MULT            reduce using rule 56 (power -> atom trailer .)
    DIV             reduce using rule 56 (power -> atom trailer .)
    LT              reduce using rule 56 (power -> atom trailer .)
    EQ              reduce using rule 56 (power -> atom trailer .)
    GT              reduce using rule 56 (power -> atom trailer .)
    COMMA           reduce using rule 56 (power -> atom trailer .)
    ASSIGN          reduce using rule 56 (power -> atom trailer .)
    NEWLINE         reduce using rule 56 (power -> atom trailer .)
    SEMICOLON       reduce using rule 56 (power -> atom trailer .)
    COLON           reduce using rule 56 (power -> atom trailer .)
    RPAR            reduce using rule 56 (power -> atom trailer .)


state 57

    (40) if_stmt -> IF test . COLON suite

    COLON           shift and go to state 81


state 58

    (51) comparison -> comparison GT . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 82
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 59

    (49) comparison -> comparison LT . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 83
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 60

    (45) comparison -> comparison PLUS . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 84
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 61

    (48) comparison -> comparison DIV . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 85
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 62

    (50) comparison -> comparison EQ . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 86
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 63

    (46) comparison -> comparison MINUS . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 87
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 64

    (47) comparison -> comparison MULT . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 88
    power                          shift and go to state 31
    atom                           shift and go to state 36

state 65

    (1) file_input_end -> declarations labels file_input ENDMARKER .

    $end            reduce using rule 1 (file_input_end -> declarations labels file_input ENDMARKER .)


state 66

    (2) file_input -> file_input NEWLINE .

    ENDMARKER       reduce using rule 2 (file_input -> file_input NEWLINE .)
    NEWLINE         reduce using rule 2 (file_input -> file_input NEWLINE .)
    IF              reduce using rule 2 (file_input -> file_input NEWLINE .)
    DEF             reduce using rule 2 (file_input -> file_input NEWLINE .)
    RETURN          reduce using rule 2 (file_input -> file_input NEWLINE .)
    PLUS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    MINUS           reduce using rule 2 (file_input -> file_input NEWLINE .)
    NAME            reduce using rule 2 (file_input -> file_input NEWLINE .)
    NUMBER          reduce using rule 2 (file_input -> file_input NEWLINE .)
    STRING          reduce using rule 2 (file_input -> file_input NEWLINE .)
    LPAR            reduce using rule 2 (file_input -> file_input NEWLINE .)


state 67

    (3) file_input -> file_input stmt .

    ENDMARKER       reduce using rule 3 (file_input -> file_input stmt .)
    NEWLINE         reduce using rule 3 (file_input -> file_input stmt .)
    IF              reduce using rule 3 (file_input -> file_input stmt .)
    DEF             reduce using rule 3 (file_input -> file_input stmt .)
    RETURN          reduce using rule 3 (file_input -> file_input stmt .)
    PLUS            reduce using rule 3 (file_input -> file_input stmt .)
    MINUS           reduce using rule 3 (file_input -> file_input stmt .)
    NAME            reduce using rule 3 (file_input -> file_input stmt .)
    NUMBER          reduce using rule 3 (file_input -> file_input stmt .)
    STRING          reduce using rule 3 (file_input -> file_input stmt .)
    LPAR            reduce using rule 3 (file_input -> file_input stmt .)


state 68

    (28) simple_stmt -> small_stmts NEWLINE .

    ENDMARKER       reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    LPAR            reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)
    DEDENT          reduce using rule 28 (simple_stmt -> small_stmts NEWLINE .)


state 69

    (29) simple_stmt -> small_stmts SEMICOLON . NEWLINE
    (30) small_stmts -> small_stmts SEMICOLON . small_stmt
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 90
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    flow_stmt                      shift and go to state 24
    comparison                     shift and go to state 41
    power                          shift and go to state 31
    small_stmt                     shift and go to state 89
    testlist                       shift and go to state 33
    return_stmt                    shift and go to state 20
    atom                           shift and go to state 36
    test                           shift and go to state 27
    testlist_multi                 shift and go to state 35
    expr_stmt                      shift and go to state 39

state 70

    (20) label -> LABEL NAME COLON . NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT

    NEWLINE         shift and go to state 91


state 71

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER . LPAR STRING named_params RPAR NEWLINE

    LPAR            shift and go to state 92


state 72

    (12) image_decl -> IMAGE NAME NAME ASSIGN STRING . NEWLINE

    NEWLINE         shift and go to state 93


state 73

    (60) atom -> LPAR testlist RPAR .

    LPAR            reduce using rule 60 (atom -> LPAR testlist RPAR .)
    PLUS            reduce using rule 60 (atom -> LPAR testlist RPAR .)
    MINUS           reduce using rule 60 (atom -> LPAR testlist RPAR .)
    MULT            reduce using rule 60 (atom -> LPAR testlist RPAR .)
    DIV             reduce using rule 60 (atom -> LPAR testlist RPAR .)
    LT              reduce using rule 60 (atom -> LPAR testlist RPAR .)
    EQ              reduce using rule 60 (atom -> LPAR testlist RPAR .)
    GT              reduce using rule 60 (atom -> LPAR testlist RPAR .)
    COMMA           reduce using rule 60 (atom -> LPAR testlist RPAR .)
    ASSIGN          reduce using rule 60 (atom -> LPAR testlist RPAR .)
    NEWLINE         reduce using rule 60 (atom -> LPAR testlist RPAR .)
    SEMICOLON       reduce using rule 60 (atom -> LPAR testlist RPAR .)
    RPAR            reduce using rule 60 (atom -> LPAR testlist RPAR .)
    COLON           reduce using rule 60 (atom -> LPAR testlist RPAR .)


state 74

    (22) parameters -> LPAR . RPAR
    (23) parameters -> LPAR . varargslist RPAR
    (24) varargslist -> . varargslist COMMA NAME
    (25) varargslist -> . NAME

    RPAR            shift and go to state 96
    NAME            shift and go to state 95

    varargslist                    shift and go to state 94

state 75

    (21) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 97


state 76

    (34) expr_stmt -> testlist ASSIGN testlist .

    NEWLINE         reduce using rule 34 (expr_stmt -> testlist ASSIGN testlist .)
    SEMICOLON       reduce using rule 34 (expr_stmt -> testlist ASSIGN testlist .)


state 77

    (64) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 64 (testlist_multi -> testlist_multi COMMA test .)
    ASSIGN          reduce using rule 64 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 64 (testlist_multi -> testlist_multi COMMA test .)
    SEMICOLON       reduce using rule 64 (testlist_multi -> testlist_multi COMMA test .)
    RPAR            reduce using rule 64 (testlist_multi -> testlist_multi COMMA test .)


state 78

    (68) arglist -> argument .

    RPAR            reduce using rule 68 (arglist -> argument .)
    COMMA           reduce using rule 68 (arglist -> argument .)


state 79

    (69) argument -> test .

    RPAR            reduce using rule 69 (argument -> test .)
    COMMA           reduce using rule 69 (argument -> test .)


state 80

    (61) trailer -> LPAR arglist . RPAR
    (67) arglist -> arglist . COMMA argument

    RPAR            shift and go to state 99
    COMMA           shift and go to state 98


state 81

    (40) if_stmt -> IF test COLON . suite
    (41) suite -> . simple_stmt
    (42) suite -> . NEWLINE INDENT stmts DEDENT
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 100
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    flow_stmt                      shift and go to state 24
    comparison                     shift and go to state 41
    power                          shift and go to state 31
    small_stmt                     shift and go to state 18
    simple_stmt                    shift and go to state 101
    testlist                       shift and go to state 33
    testlist_multi                 shift and go to state 35
    return_stmt                    shift and go to state 20
    atom                           shift and go to state 36
    test                           shift and go to state 27
    suite                          shift and go to state 102
    expr_stmt                      shift and go to state 39
    small_stmts                    shift and go to state 44

state 82

    (51) comparison -> comparison GT comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    LT              reduce using rule 51 (comparison -> comparison GT comparison .)
    EQ              reduce using rule 51 (comparison -> comparison GT comparison .)
    GT              reduce using rule 51 (comparison -> comparison GT comparison .)
    COMMA           reduce using rule 51 (comparison -> comparison GT comparison .)
    ASSIGN          reduce using rule 51 (comparison -> comparison GT comparison .)
    NEWLINE         reduce using rule 51 (comparison -> comparison GT comparison .)
    SEMICOLON       reduce using rule 51 (comparison -> comparison GT comparison .)
    RPAR            reduce using rule 51 (comparison -> comparison GT comparison .)
    COLON           reduce using rule 51 (comparison -> comparison GT comparison .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 63
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! PLUS            [ reduce using rule 51 (comparison -> comparison GT comparison .) ]
  ! MINUS           [ reduce using rule 51 (comparison -> comparison GT comparison .) ]
  ! MULT            [ reduce using rule 51 (comparison -> comparison GT comparison .) ]
  ! DIV             [ reduce using rule 51 (comparison -> comparison GT comparison .) ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 83

    (49) comparison -> comparison LT comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    LT              reduce using rule 49 (comparison -> comparison LT comparison .)
    EQ              reduce using rule 49 (comparison -> comparison LT comparison .)
    GT              reduce using rule 49 (comparison -> comparison LT comparison .)
    COMMA           reduce using rule 49 (comparison -> comparison LT comparison .)
    ASSIGN          reduce using rule 49 (comparison -> comparison LT comparison .)
    NEWLINE         reduce using rule 49 (comparison -> comparison LT comparison .)
    SEMICOLON       reduce using rule 49 (comparison -> comparison LT comparison .)
    RPAR            reduce using rule 49 (comparison -> comparison LT comparison .)
    COLON           reduce using rule 49 (comparison -> comparison LT comparison .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 63
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! PLUS            [ reduce using rule 49 (comparison -> comparison LT comparison .) ]
  ! MINUS           [ reduce using rule 49 (comparison -> comparison LT comparison .) ]
  ! MULT            [ reduce using rule 49 (comparison -> comparison LT comparison .) ]
  ! DIV             [ reduce using rule 49 (comparison -> comparison LT comparison .) ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 84

    (45) comparison -> comparison PLUS comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 45 (comparison -> comparison PLUS comparison .)
    MINUS           reduce using rule 45 (comparison -> comparison PLUS comparison .)
    LT              reduce using rule 45 (comparison -> comparison PLUS comparison .)
    EQ              reduce using rule 45 (comparison -> comparison PLUS comparison .)
    GT              reduce using rule 45 (comparison -> comparison PLUS comparison .)
    COMMA           reduce using rule 45 (comparison -> comparison PLUS comparison .)
    ASSIGN          reduce using rule 45 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 45 (comparison -> comparison PLUS comparison .)
    SEMICOLON       reduce using rule 45 (comparison -> comparison PLUS comparison .)
    RPAR            reduce using rule 45 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 45 (comparison -> comparison PLUS comparison .)
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! MULT            [ reduce using rule 45 (comparison -> comparison PLUS comparison .) ]
  ! DIV             [ reduce using rule 45 (comparison -> comparison PLUS comparison .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 85

    (48) comparison -> comparison DIV comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 48 (comparison -> comparison DIV comparison .)
    MINUS           reduce using rule 48 (comparison -> comparison DIV comparison .)
    MULT            reduce using rule 48 (comparison -> comparison DIV comparison .)
    DIV             reduce using rule 48 (comparison -> comparison DIV comparison .)
    LT              reduce using rule 48 (comparison -> comparison DIV comparison .)
    EQ              reduce using rule 48 (comparison -> comparison DIV comparison .)
    GT              reduce using rule 48 (comparison -> comparison DIV comparison .)
    COMMA           reduce using rule 48 (comparison -> comparison DIV comparison .)
    ASSIGN          reduce using rule 48 (comparison -> comparison DIV comparison .)
    NEWLINE         reduce using rule 48 (comparison -> comparison DIV comparison .)
    SEMICOLON       reduce using rule 48 (comparison -> comparison DIV comparison .)
    RPAR            reduce using rule 48 (comparison -> comparison DIV comparison .)
    COLON           reduce using rule 48 (comparison -> comparison DIV comparison .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! MULT            [ shift and go to state 64 ]
  ! DIV             [ shift and go to state 61 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 86

    (50) comparison -> comparison EQ comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    LT              reduce using rule 50 (comparison -> comparison EQ comparison .)
    EQ              reduce using rule 50 (comparison -> comparison EQ comparison .)
    GT              reduce using rule 50 (comparison -> comparison EQ comparison .)
    COMMA           reduce using rule 50 (comparison -> comparison EQ comparison .)
    ASSIGN          reduce using rule 50 (comparison -> comparison EQ comparison .)
    NEWLINE         reduce using rule 50 (comparison -> comparison EQ comparison .)
    SEMICOLON       reduce using rule 50 (comparison -> comparison EQ comparison .)
    RPAR            reduce using rule 50 (comparison -> comparison EQ comparison .)
    COLON           reduce using rule 50 (comparison -> comparison EQ comparison .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 63
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! PLUS            [ reduce using rule 50 (comparison -> comparison EQ comparison .) ]
  ! MINUS           [ reduce using rule 50 (comparison -> comparison EQ comparison .) ]
  ! MULT            [ reduce using rule 50 (comparison -> comparison EQ comparison .) ]
  ! DIV             [ reduce using rule 50 (comparison -> comparison EQ comparison .) ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 87

    (46) comparison -> comparison MINUS comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 46 (comparison -> comparison MINUS comparison .)
    MINUS           reduce using rule 46 (comparison -> comparison MINUS comparison .)
    LT              reduce using rule 46 (comparison -> comparison MINUS comparison .)
    EQ              reduce using rule 46 (comparison -> comparison MINUS comparison .)
    GT              reduce using rule 46 (comparison -> comparison MINUS comparison .)
    COMMA           reduce using rule 46 (comparison -> comparison MINUS comparison .)
    ASSIGN          reduce using rule 46 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 46 (comparison -> comparison MINUS comparison .)
    SEMICOLON       reduce using rule 46 (comparison -> comparison MINUS comparison .)
    RPAR            reduce using rule 46 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 46 (comparison -> comparison MINUS comparison .)
    MULT            shift and go to state 64
    DIV             shift and go to state 61

  ! MULT            [ reduce using rule 46 (comparison -> comparison MINUS comparison .) ]
  ! DIV             [ reduce using rule 46 (comparison -> comparison MINUS comparison .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 88

    (47) comparison -> comparison MULT comparison .
    (45) comparison -> comparison . PLUS comparison
    (46) comparison -> comparison . MINUS comparison
    (47) comparison -> comparison . MULT comparison
    (48) comparison -> comparison . DIV comparison
    (49) comparison -> comparison . LT comparison
    (50) comparison -> comparison . EQ comparison
    (51) comparison -> comparison . GT comparison

    PLUS            reduce using rule 47 (comparison -> comparison MULT comparison .)
    MINUS           reduce using rule 47 (comparison -> comparison MULT comparison .)
    MULT            reduce using rule 47 (comparison -> comparison MULT comparison .)
    DIV             reduce using rule 47 (comparison -> comparison MULT comparison .)
    LT              reduce using rule 47 (comparison -> comparison MULT comparison .)
    EQ              reduce using rule 47 (comparison -> comparison MULT comparison .)
    GT              reduce using rule 47 (comparison -> comparison MULT comparison .)
    COMMA           reduce using rule 47 (comparison -> comparison MULT comparison .)
    ASSIGN          reduce using rule 47 (comparison -> comparison MULT comparison .)
    NEWLINE         reduce using rule 47 (comparison -> comparison MULT comparison .)
    SEMICOLON       reduce using rule 47 (comparison -> comparison MULT comparison .)
    RPAR            reduce using rule 47 (comparison -> comparison MULT comparison .)
    COLON           reduce using rule 47 (comparison -> comparison MULT comparison .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 63 ]
  ! MULT            [ shift and go to state 64 ]
  ! DIV             [ shift and go to state 61 ]
  ! LT              [ shift and go to state 59 ]
  ! EQ              [ shift and go to state 62 ]
  ! GT              [ shift and go to state 58 ]


state 89

    (30) small_stmts -> small_stmts SEMICOLON small_stmt .

    NEWLINE         reduce using rule 30 (small_stmts -> small_stmts SEMICOLON small_stmt .)
    SEMICOLON       reduce using rule 30 (small_stmts -> small_stmts SEMICOLON small_stmt .)


state 90

    (29) simple_stmt -> small_stmts SEMICOLON NEWLINE .

    ENDMARKER       reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NEWLINE         reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    IF              reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    DEF             reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    RETURN          reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    PLUS            reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    MINUS           reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NAME            reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NUMBER          reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    STRING          reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    LPAR            reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    DEDENT          reduce using rule 29 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)


state 91

    (20) label -> LABEL NAME COLON NEWLINE . INDENT SCENE NAME NAME NEWLINE DEDENT

    INDENT          shift and go to state 103


state 92

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR . STRING named_params RPAR NEWLINE

    STRING          shift and go to state 104


state 93

    (12) image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE .

    NEWLINE         reduce using rule 12 (image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE .)
    LABEL           reduce using rule 12 (image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE .)
    IMAGE           reduce using rule 12 (image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE .)
    DEFINE          reduce using rule 12 (image_decl -> IMAGE NAME NAME ASSIGN STRING NEWLINE .)


state 94

    (23) parameters -> LPAR varargslist . RPAR
    (24) varargslist -> varargslist . COMMA NAME

    RPAR            shift and go to state 106
    COMMA           shift and go to state 105


state 95

    (25) varargslist -> NAME .

    RPAR            reduce using rule 25 (varargslist -> NAME .)
    COMMA           reduce using rule 25 (varargslist -> NAME .)


state 96

    (22) parameters -> LPAR RPAR .

    COLON           reduce using rule 22 (parameters -> LPAR RPAR .)


state 97

    (21) funcdef -> DEF NAME parameters COLON . suite
    (41) suite -> . simple_stmt
    (42) suite -> . NEWLINE INDENT stmts DEDENT
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 100
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    flow_stmt                      shift and go to state 24
    comparison                     shift and go to state 41
    expr_stmt                      shift and go to state 39
    power                          shift and go to state 31
    simple_stmt                    shift and go to state 101
    testlist                       shift and go to state 33
    small_stmt                     shift and go to state 18
    test                           shift and go to state 27
    return_stmt                    shift and go to state 20
    atom                           shift and go to state 36
    testlist_multi                 shift and go to state 35
    suite                          shift and go to state 107
    small_stmts                    shift and go to state 44

state 98

    (67) arglist -> arglist COMMA . argument
    (69) argument -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    comparison                     shift and go to state 41
    power                          shift and go to state 31
    argument                       shift and go to state 108
    atom                           shift and go to state 36
    test                           shift and go to state 79

state 99

    (61) trailer -> LPAR arglist RPAR .

    PLUS            reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    MINUS           reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    MULT            reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    DIV             reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    LT              reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    EQ              reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    GT              reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    COMMA           reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    ASSIGN          reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    NEWLINE         reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    SEMICOLON       reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    RPAR            reduce using rule 61 (trailer -> LPAR arglist RPAR .)
    COLON           reduce using rule 61 (trailer -> LPAR arglist RPAR .)


state 100

    (42) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 109


state 101

    (41) suite -> simple_stmt .

    ENDMARKER       reduce using rule 41 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 41 (suite -> simple_stmt .)
    IF              reduce using rule 41 (suite -> simple_stmt .)
    DEF             reduce using rule 41 (suite -> simple_stmt .)
    RETURN          reduce using rule 41 (suite -> simple_stmt .)
    PLUS            reduce using rule 41 (suite -> simple_stmt .)
    MINUS           reduce using rule 41 (suite -> simple_stmt .)
    NAME            reduce using rule 41 (suite -> simple_stmt .)
    NUMBER          reduce using rule 41 (suite -> simple_stmt .)
    STRING          reduce using rule 41 (suite -> simple_stmt .)
    LPAR            reduce using rule 41 (suite -> simple_stmt .)
    DEDENT          reduce using rule 41 (suite -> simple_stmt .)


state 102

    (40) if_stmt -> IF test COLON suite .

    ENDMARKER       reduce using rule 40 (if_stmt -> IF test COLON suite .)
    NEWLINE         reduce using rule 40 (if_stmt -> IF test COLON suite .)
    IF              reduce using rule 40 (if_stmt -> IF test COLON suite .)
    DEF             reduce using rule 40 (if_stmt -> IF test COLON suite .)
    RETURN          reduce using rule 40 (if_stmt -> IF test COLON suite .)
    PLUS            reduce using rule 40 (if_stmt -> IF test COLON suite .)
    MINUS           reduce using rule 40 (if_stmt -> IF test COLON suite .)
    NAME            reduce using rule 40 (if_stmt -> IF test COLON suite .)
    NUMBER          reduce using rule 40 (if_stmt -> IF test COLON suite .)
    STRING          reduce using rule 40 (if_stmt -> IF test COLON suite .)
    LPAR            reduce using rule 40 (if_stmt -> IF test COLON suite .)
    DEDENT          reduce using rule 40 (if_stmt -> IF test COLON suite .)


state 103

    (20) label -> LABEL NAME COLON NEWLINE INDENT . SCENE NAME NAME NEWLINE DEDENT

    SCENE           shift and go to state 110


state 104

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING . named_params RPAR NEWLINE
    (14) named_params -> . COMMA NAME ASSIGN STRING
    (15) named_params -> .

    COMMA           shift and go to state 112
    RPAR            reduce using rule 15 (named_params -> .)

    named_params                   shift and go to state 111

state 105

    (24) varargslist -> varargslist COMMA . NAME

    NAME            shift and go to state 113


state 106

    (23) parameters -> LPAR varargslist RPAR .

    COLON           reduce using rule 23 (parameters -> LPAR varargslist RPAR .)


state 107

    (21) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    LPAR            reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 21 (funcdef -> DEF NAME parameters COLON suite .)


state 108

    (67) arglist -> arglist COMMA argument .

    RPAR            reduce using rule 67 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 67 (arglist -> arglist COMMA argument .)


state 109

    (42) suite -> NEWLINE INDENT . stmts DEDENT
    (43) stmts -> . stmts stmt
    (44) stmts -> . stmt
    (26) stmt -> . simple_stmt
    (27) stmt -> . compound_stmt
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (38) compound_stmt -> . if_stmt
    (39) compound_stmt -> . funcdef
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (40) if_stmt -> . IF test COLON suite
    (21) funcdef -> . DEF NAME parameters COLON suite
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    IF              shift and go to state 40
    DEF             shift and go to state 23
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    flow_stmt                      shift and go to state 24
    comparison                     shift and go to state 41
    expr_stmt                      shift and go to state 39
    if_stmt                        shift and go to state 38
    small_stmt                     shift and go to state 18
    stmts                          shift and go to state 114
    testlist                       shift and go to state 33
    stmt                           shift and go to state 115
    testlist_multi                 shift and go to state 35
    simple_stmt                    shift and go to state 32
    power                          shift and go to state 31
    test                           shift and go to state 27
    return_stmt                    shift and go to state 20
    atom                           shift and go to state 36
    funcdef                        shift and go to state 37
    compound_stmt                  shift and go to state 28
    small_stmts                    shift and go to state 44

state 110

    (20) label -> LABEL NAME COLON NEWLINE INDENT SCENE . NAME NAME NEWLINE DEDENT

    NAME            shift and go to state 116


state 111

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params . RPAR NEWLINE

    RPAR            shift and go to state 117


state 112

    (14) named_params -> COMMA . NAME ASSIGN STRING

    NAME            shift and go to state 118


state 113

    (24) varargslist -> varargslist COMMA NAME .

    RPAR            reduce using rule 24 (varargslist -> varargslist COMMA NAME .)
    COMMA           reduce using rule 24 (varargslist -> varargslist COMMA NAME .)


state 114

    (42) suite -> NEWLINE INDENT stmts . DEDENT
    (43) stmts -> stmts . stmt
    (26) stmt -> . simple_stmt
    (27) stmt -> . compound_stmt
    (28) simple_stmt -> . small_stmts NEWLINE
    (29) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (38) compound_stmt -> . if_stmt
    (39) compound_stmt -> . funcdef
    (30) small_stmts -> . small_stmts SEMICOLON small_stmt
    (31) small_stmts -> . small_stmt
    (40) if_stmt -> . IF test COLON suite
    (21) funcdef -> . DEF NAME parameters COLON suite
    (32) small_stmt -> . flow_stmt
    (33) small_stmt -> . expr_stmt
    (36) flow_stmt -> . return_stmt
    (34) expr_stmt -> . testlist ASSIGN testlist
    (35) expr_stmt -> . testlist
    (37) return_stmt -> . RETURN testlist
    (62) testlist -> . testlist_multi COMMA
    (63) testlist -> . testlist_multi
    (64) testlist_multi -> . testlist_multi COMMA test
    (65) testlist_multi -> . test
    (66) test -> . comparison
    (45) comparison -> . comparison PLUS comparison
    (46) comparison -> . comparison MINUS comparison
    (47) comparison -> . comparison MULT comparison
    (48) comparison -> . comparison DIV comparison
    (49) comparison -> . comparison LT comparison
    (50) comparison -> . comparison EQ comparison
    (51) comparison -> . comparison GT comparison
    (52) comparison -> . PLUS comparison
    (53) comparison -> . MINUS comparison
    (54) comparison -> . power
    (55) power -> . atom
    (56) power -> . atom trailer
    (57) atom -> . NAME
    (58) atom -> . NUMBER
    (59) atom -> . STRING
    (60) atom -> . LPAR testlist RPAR

    DEDENT          shift and go to state 119
    IF              shift and go to state 40
    DEF             shift and go to state 23
    RETURN          shift and go to state 21
    PLUS            shift and go to state 29
    MINUS           shift and go to state 22
    NAME            shift and go to state 42
    NUMBER          shift and go to state 19
    STRING          shift and go to state 30
    LPAR            shift and go to state 17

    flow_stmt                      shift and go to state 24
    comparison                     shift and go to state 41
    expr_stmt                      shift and go to state 39
    if_stmt                        shift and go to state 38
    small_stmt                     shift and go to state 18
    testlist                       shift and go to state 33
    stmt                           shift and go to state 120
    testlist_multi                 shift and go to state 35
    simple_stmt                    shift and go to state 32
    power                          shift and go to state 31
    test                           shift and go to state 27
    return_stmt                    shift and go to state 20
    atom                           shift and go to state 36
    funcdef                        shift and go to state 37
    compound_stmt                  shift and go to state 28
    small_stmts                    shift and go to state 44

state 115

    (44) stmts -> stmt .

    DEDENT          reduce using rule 44 (stmts -> stmt .)
    IF              reduce using rule 44 (stmts -> stmt .)
    DEF             reduce using rule 44 (stmts -> stmt .)
    RETURN          reduce using rule 44 (stmts -> stmt .)
    PLUS            reduce using rule 44 (stmts -> stmt .)
    MINUS           reduce using rule 44 (stmts -> stmt .)
    NAME            reduce using rule 44 (stmts -> stmt .)
    NUMBER          reduce using rule 44 (stmts -> stmt .)
    STRING          reduce using rule 44 (stmts -> stmt .)
    LPAR            reduce using rule 44 (stmts -> stmt .)


state 116

    (20) label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME . NAME NEWLINE DEDENT

    NAME            shift and go to state 121


state 117

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR . NEWLINE

    NEWLINE         shift and go to state 122


state 118

    (14) named_params -> COMMA NAME . ASSIGN STRING

    ASSIGN          shift and go to state 123


state 119

    (42) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAR            reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 42 (suite -> NEWLINE INDENT stmts DEDENT .)


state 120

    (43) stmts -> stmts stmt .

    DEDENT          reduce using rule 43 (stmts -> stmts stmt .)
    IF              reduce using rule 43 (stmts -> stmts stmt .)
    DEF             reduce using rule 43 (stmts -> stmts stmt .)
    RETURN          reduce using rule 43 (stmts -> stmts stmt .)
    PLUS            reduce using rule 43 (stmts -> stmts stmt .)
    MINUS           reduce using rule 43 (stmts -> stmts stmt .)
    NAME            reduce using rule 43 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 43 (stmts -> stmts stmt .)
    STRING          reduce using rule 43 (stmts -> stmts stmt .)
    LPAR            reduce using rule 43 (stmts -> stmts stmt .)


state 121

    (20) label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME . NEWLINE DEDENT

    NEWLINE         shift and go to state 124


state 122

    (13) character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE .

    NEWLINE         reduce using rule 13 (character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE .)
    LABEL           reduce using rule 13 (character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE .)
    IMAGE           reduce using rule 13 (character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE .)
    DEFINE          reduce using rule 13 (character_decl -> DEFINE NAME ASSIGN CHARACTER LPAR STRING named_params RPAR NEWLINE .)


state 123

    (14) named_params -> COMMA NAME ASSIGN . STRING

    STRING          shift and go to state 125


state 124

    (20) label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE . DEDENT

    DEDENT          shift and go to state 126


state 125

    (14) named_params -> COMMA NAME ASSIGN STRING .

    RPAR            reduce using rule 14 (named_params -> COMMA NAME ASSIGN STRING .)


state 126

    (20) label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .

    NEWLINE         reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    LABEL           reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    IF              reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    DEF             reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    RETURN          reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    PLUS            reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    MINUS           reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    NAME            reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    NUMBER          reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    STRING          reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)
    LPAR            reduce using rule 20 (label -> LABEL NAME COLON NEWLINE INDENT SCENE NAME NAME NEWLINE DEDENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 12 resolved using rule (declarations -> declarations NEWLINE)
WARNING: rejected rule (labels -> NEWLINE) in state 12
WARNING: reduce/reduce conflict in state 25 resolved using rule (file_input -> NEWLINE)
WARNING: rejected rule (labels -> labels NEWLINE) in state 25
